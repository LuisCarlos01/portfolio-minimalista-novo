/**
 * Script para instalar hooks Git no projeto
 * Executado via: npm run install-hooks
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// Caminho para o diret√≥rio .git/hooks
const getGitHooksPath = () => {
  try {
    // Obter o caminho para o diret√≥rio .git
    const gitDir = execSync('git rev-parse --git-dir').toString().trim();
    return path.resolve(gitDir, 'hooks');
  } catch (error) {
    console.error('Erro ao determinar o diret√≥rio Git:', error.message);
    process.exit(1);
  }
};

// Conte√∫do para o hook pre-commit
const preCommitHook = `#!/bin/sh

# Hook de pre-commit para verificar conflitos e duplica√ß√µes no c√≥digo
echo "üîç Executando revis√£o de c√≥digo antes do commit..."

# Executar o script de revis√£o de c√≥digo
npm run review-changes

# Verificar o resultado da revis√£o
if [ $? -ne 0 ]; then
  echo "‚ùå A revis√£o de c√≥digo encontrou problemas que precisam ser corrigidos antes do commit."
  echo "   Para ignorar esta verifica√ß√£o, use 'git commit --no-verify'"
  exit 1
fi

echo "‚úÖ Revis√£o de c√≥digo conclu√≠da com sucesso!"
exit 0
`;

// Instalar hooks
const installHooks = () => {
  try {
    console.log('Instalando hooks Git...');
    
    // Obter o caminho dos hooks Git
    const hooksPath = getGitHooksPath();
    
    // Verificar se o diret√≥rio de hooks existe
    if (!fs.existsSync(hooksPath)) {
      console.log(`Criando diret√≥rio de hooks: ${hooksPath}`);
      fs.mkdirSync(hooksPath, { recursive: true });
    }
    
    // Caminho para o hook pre-commit
    const preCommitPath = path.join(hooksPath, 'pre-commit');
    
    // Escrever o hook pre-commit
    fs.writeFileSync(preCommitPath, preCommitHook);
    
    // Tornar o hook execut√°vel (chmod +x)
    execSync(`chmod +x "${preCommitPath}"`);
    
    console.log('‚úÖ Hooks Git instalados com sucesso!');
    console.log('   O hook pre-commit agora verificar√° conflitos e duplica√ß√µes no c√≥digo antes de cada commit.');
  } catch (error) {
    console.error('Erro ao instalar hooks Git:', error.message);
    process.exit(1);
  }
};

// Executar instala√ß√£o
installHooks(); 