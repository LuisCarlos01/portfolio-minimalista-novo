/**
 * Arquivo de entrada para todos os estilos da aplica√ß√£o
 * Centraliza a importa√ß√£o de estilos para evitar duplica√ß√µes e conflitos
 */

// Estilos globais - devem ser importados primeiro
import './variables.css';
import './style.css';

// Estilos de componentes espec√≠ficos
import './components/HeroSection.scss';
import './components/SkillsSection.scss';
import './components/PortfolioSection.scss';
import './components/ContactSection.scss';
import './components/ResumeSection.scss';
import './components/ProjectCard.scss';

// Utilit√°rios e estilos funcionais
import './skill-modal.css';
import './preloader.css';
import './responsive-menu.css';
import './menu-animation.css';
import './modern-footer.css';

// Estilos personalizados (deve ser o √∫ltimo para ter prioridade)
import './custom.css';

/**
 * Fun√ß√£o para validar estilos em desenvolvimento
 * @param {boolean} isDev - Se √© ambiente de desenvolvimento
 */
export const validateStyles = async (isDev = process.env.NODE_ENV === 'development') => {
  if (isDev) {
    try {
      // Importa√ß√£o din√¢mica para n√£o afetar o bundle de produ√ß√£o
      const { default: StyleValidator } = await import('../utils/styleValidator');
      
      // Nota: Removida a parte que usa fs e path, pois n√£o funcionam no navegador
      // Vamos usar apenas a valida√ß√£o b√°sica que n√£o depende de I/O
      
      console.log('Valida√ß√£o de estilos deve ser executada via npm run check-styles');
    } catch (error) {
      console.error('Erro ao validar estilos:', error);
    }
  }
};

// Executar valida√ß√£o em desenvolvimento
if (process.env.NODE_ENV === 'development') {
  // Apenas mostra a mensagem para n√£o bloquear o carregamento
  console.log('\nüíÖ O verificador de estilos est√° dispon√≠vel via npm run check-styles');
}

// Exporta√ß√£o padr√£o para facilitar a importa√ß√£o
export default {
  validateStyles,
}; 